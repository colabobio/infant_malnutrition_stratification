# Drop scale_ciaf1_medu column if it exists
if("scale_ciaf1_medu" %in% names(df)) {
df$scale_ciaf1_medu <- NULL
}
# Create scale_ciaf1_medu column with missing values
df$scale_ciaf1_medu <- NA
# Assign values to scale_ciaf1_medu based on maternal_education
df$scale_ciaf1_medu <- ifelse(df$maternal_education == "high secondary or college", 0,
ifelse(df$maternal_education == "secondary", 2,
ifelse(df$maternal_education == "primary", 3.5,
ifelse(df$maternal_education == "no edu", 5, df$scale_ciaf1_medu))))
# Drop scale_ciaf1_medu column if it exists
if("scale_ciaf1_toilet" %in% names(df)) {
df$scale_ciaf1_toilet <- NULL
}
# Create 'scale_ciaf1_toilet' column based on 'toilet' values
df$scale_ciaf1_toilet <- ifelse(df$toilet == 1, 0,
ifelse(df$toilet == 0, 3, NA))
# Drop scale_ciaf1_zone column if it exists
if("scale_ciaf1_zone" %in% names(df)) {
df$scale_ciaf1_zone <- NULL
}
# Create scale_ciaf1_zone column with missing values
df$scale_ciaf1_zone <- NA
# Assign values to scale_ciaf1_zone based on state_zones
df$scale_ciaf1_zone <- ifelse(df$state_zones == "1. North-Eastern", 0,
ifelse(df$state_zones %in% c("2. North", "3. Central"), 2.5,
ifelse(df$state_zones %in% c("4. Eastern", "6. Southern"), 2,
ifelse(df$state_zones == "5. Western", 5, df$scale_ciaf1_zone))))
# Drop scale_ciaf1_fuel column if it exists
if("scale_ciaf1_fuel" %in% names(df)) {
df$scale_ciaf1_fuel <- NULL
}
# Create scale_ciaf1_fuel column with zeros
df$scale_ciaf1_fuel <- 0
# Assign values to scale_ciaf1_fuel based on cooking_fuel
df$scale_ciaf1_fuel <- ifelse(df$cooking_fuel == 1, 0,
ifelse(df$cooking_fuel == 0, 0.5, df$scale_ciaf1_fuel))
# Drop scale_ciaf1_female column if it exists
if("scale_ciaf1_female" %in% names(df)) {
df$scale_ciaf1_female <- NULL
}
# Create scale_ciaf1_female column with missing values
df$scale_ciaf1_female <- NA
# Assign values to scale_ciaf1_female based on female
df$scale_ciaf1_female <- ifelse(df$female == "1. female", 0,
ifelse(df$female == "0. male", 1, df$scale_ciaf1_female))
# Drop scale_ciaf1_caste column if it exists
if("scale_ciaf1_caste" %in% names(df)) {
df$scale_ciaf1_caste <- NULL
}
# Create scale_ciaf1_caste column with missing values
df$scale_ciaf1_caste <- NA
# Assign values to scale_ciaf1_caste based on low_caste
df$scale_ciaf1_caste <- ifelse(df$low_caste == 0, 0,
ifelse(df$low_caste == 1, 2.5, df$scale_ciaf1_caste))
# Drop scale_ciaf1_priority column if it exists
if("scale_ciaf1_priority" %in% names(df)) {
df$scale_ciaf1_priority <- NULL
}
# Create scale_ciaf1_priority column with missing values
df$scale_ciaf1_priority <- NA
# Assign values to scale_ciaf1_priority based on priority_state
df$scale_ciaf1_priority <- ifelse(df$priority_state == 0, 0,
ifelse(df$priority_state == 1, 1, df$scale_ciaf1_priority))
# Assuming your data is in a data frame named 'df'
# Replace 'df' with the name of your data frame
# Drop score_ciaf1 column if it exists
if("score_ciaf1" %in% names(df)) {
df$score_ciaf1 <- NULL
}
# Create score_ciaf1 column by summing up the scale_ciaf1* columns
df$score_ciaf1 <- rowSums(df[grep("scale_ciaf1", names(df))], na.rm = TRUE)
# shdistri was renamed to shdist
# Calculate mean CIAF by shdist and sort
df <- df %>% group_by(shdist) %>% arrange(shdist) %>%
mutate(dist_ciaf_mean = mean(ciaf, na.rm = TRUE)) %>% ungroup()
# Drop mean_ciaf_dist column if it exists
if("mean_ciaf_dist" %in% names(df)) {
df$mean_ciaf_dist <- NULL
}
# Recode dist_ciaf_mean into mean_ciaf_dist based on cutoffs
df$mean_ciaf_dist <- cut(df$dist_ciaf_mean,
breaks = c(0, 0.4, 0.6, 1.0),
labels = c("1. < 40%", "2. 40-60%", "3. > 60%"))
# Round dist_ciaf_mean to one decimal place and assign to dist_ciaf_decile
df$dist_ciaf_decile <- round(df$dist_ciaf_mean, 1)
# Drop ciaf_decile column if it exists
if("ciaf_decile" %in% names(df)) {
df$ciaf_decile <- NULL
}
# Recode dist_ciaf_decile into ciaf_decile based on cutoffs
df$ciaf_decile <- cut(df$dist_ciaf_decile,
breaks = c(-Inf, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, Inf),
labels = c("< 30%", "40%", "50%", "60%", "70%", "80%", "> 80%"))
df$mean_district_CIAF_40_49.9 <- ifelse(df$ciaf_decile == "40%", 1, 0)  %>% as.factor()
df$mean_district_CIAF_50_59.9 <- ifelse(df$ciaf_decile == "50%", 1, 0)  %>% as.factor()
df$mean_district_CIAF_60_69.9 <- ifelse(df$ciaf_decile == "60%", 1, 0)  %>% as.factor()
df$mean_district_CIAF_70_79.9 <- ifelse(df$ciaf_decile == "70%", 1, 0) %>% as.factor()
df$mean_district_CIAF_80_89.9 <- ifelse(df$ciaf_decile == "80%", 1, 0) %>% as.factor()
# Convert to factor
df$ciaf <- as.factor(df$ciaf)
df <- df %>%
mutate(wasted = as.integer(wasted)) %>%
mutate(wasted = case_when(wasted == 1 ~ 0,
wasted == 2 ~ 1))
# Calculate the mean 'wasted' by 'shdist' and create a new column 'dist_wasted_mean'
df <- df %>%
group_by(shdist) %>%
mutate(dist_wasted_mean = mean(wasted, na.rm = TRUE)) %>%
ungroup()
# Create a new column 'mean_wasted_dist' based on the conditions specified
df$mean_wasted_dist <- cut(df$dist_wasted_mean,
breaks = c(-Inf, 0.4, 0.6, Inf),
labels = c("1. < 40%", "2. 40-60%", "3. > 60%"),
right = FALSE)
# Create a new column 'dist_wasted_decile' by rounding 'dist_wasted_mean' to the nearest tenth
df$dist_wasted_decile <- round(df$dist_wasted_mean, 1)
# Create a new column 'wasted_decile' based on the conditions specified
df$wasted_decile <- cut(df$dist_wasted_decile,
breaks = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6),
labels = c("0-10%", "10-20%", "20-30%", "30-40%", "40-50%", "50-60%"),
right = FALSE)
if ('priority_district' %in% colnames(df)) {
df$priority_district <- NULL
}
#df <- df %>%
#  mutate(dist_priority = case_when(sdistri %in% c(300, 301, 305, 313, 317, 318, 204, 205, 206, 209, 210, 211, 212, 214, 236, 238, 401, 402, 406, 416, 417, 351, 352, 353, 356, 358, 359, 362, 366, 367, 368, 369, 424, 425, 426, 427, 428, 429, 431, 441, 446, 453, 454, 460, 461, 462, 463, 464, 465, 389, 390, 391, 394, 396, 397, 398, 399, 106, 107, 114, 115, 116, 121, 123, 124, 125, 130, 149, 150, 151, 152, 153, 154, 155, 174, 176, 177, 180, 181, 182, 183, 186, 200, 201, 202, 59, 61, 68, 543, 544, 551, 552, 245, 247, 249, 252, 255, 256, 258, 90, 92, 468, 469, 472, 484, 485, 487, 489, 491, 75, 77, 80, 87, 89, 23, 25, 27, 34, 3, 5, 6, 16, 17, 18, 556, 557, 559, 560, 561, 565, 579, 580, 588, 592, 593, 272, 273, 274, 280, 293, 295, 296, 299, 281, 286, 287, 288, 634, 35, 39, 44, 47, 54, 242, 605, 606, 614, 623, 628, 631, 291, 329, 330, 332, 333, 343, 261, 262, 267, 269, 270, 271, 532, 538, 511, 523, 499, 498, 497, 508, 514, 515, 512, 279, 625, 184), TRUE ~ 9999, TRUE ~ NA_real_)) %>%
#  mutate(dist_priority = if_else(dist_priority != 9999, 0, 1))
# To mimic the 'capture drop' behavior in R, you can use the following lines of code
#if ('priority_district' %in% colnames(df)) {
#  df$priority_district <- NULL
#}
#if ('dist_priority' %in% colnames(df)) {
#  df$dist_priority <- NULL
#}
# Create a new column 'dist_priority' based on the values in the 'sdistri' column
#df$dist_priority <- ifelse(df$sdistri %in% c(300, 301, 305, 313, 317, 318, 204, 205, 206, 209, 210, 211, 212, 214, 236, 238, 401, 402, 406, 416, 417, 351, 352, 353, 356, 358, #359, 362, 366, 367, 368, 369, 424, 425, 426, 427, 428, 429, 431, 441, 446, 453, 454, 460, 461, 462, 463, 464, 465, 389, 390, 391, 394, 396, 397, 398, 399, 106, 107, 114, 115, #116, 121, 123, 124, 125, 130, 149, 150, 151, 152, 153, 154, 155, 174, 176, 177, 180, 181, 182, 183, 186, 200, 201, 202, 59, 61, 68, 543, 544, 551, 552, 245, 247, 249, 252, #255, 256, 258, 90, 92, 468, 469, 472, 484, 485, 487, 489, 491, 75, 77, 80, 87, 89, 23, 25, 27, 34, 3, 5, 6, 16, 17, 18, 556, 557, 559, 560, 561, 565, 579, 580, 588, 592, 593, #272, 273, 274, 280, 293, 295, 296, 299, 281, 286, 287, 288, 634, 35, 39, 44, 47, 54, 242, 605, 606, 614, 623, 628, 631, 291, 329, 330, 332, 333, 343, 261, 262, 267, 269, 270, #271, 532, 538, 511, 523, 499, 498, 497, 508, 514, 515, 512, 279, 625, 184), 9999, 0)
# Update 'dist_priority' values
#df$dist_priority[df$dist_priority != 9999] <- 0
#df$dist_priority[df$dist_priority == 9999] <- 1
rev(colnames(df))
path <- "/Users/justi/OneDrive/Desktop/colabo_data/data/"
#path <- "data/DHS-2019-21/"
dffile <- "recoded.rda"
save(df, file = here(path, dffile))
knitr::opts_chunk$set(echo = TRUE)
# libraries needed
library(tidyverse)  # most variable creation here uses tidyverse
library(tidyselect) # used to select variables in FP_EVENTS.R
library(haven)      # used for Haven labeled DHSvariables
library(labelled)   # used for Haven labeled variable creation
library(expss)    # for creating tables with Haven labeled df
library(readxl)     # for exporting to excel
library(naniar)   # to use replace_with_na function
library(here)       # to get R project path
library(sjlabelled) # to set variables label
library(survey)  # to calculate weighted ratio for GAR
library(Hmisc)
library(tidyr)
library(mltools)
library(Boruta)
path <- "/Users/justi/OneDrive/Desktop/colabo_data/data/recoded.rda"
#path <- "data/DHS-2019-21/"
load(file = path)
pattern = "^v[0-9][0-9][0-9]*|^hv[0-9][0-9][0-9]*|^ml[0-9][0-9]*|^h[0-9][0-9]|^s[0-9][0-9][0-9]*|^shb[0-9][0-9][0-9]*|^h[a-z][0-9]*|^b[0-9]*|^sh[0-9]*|^m[0-9]*|^sb[0-9]*|^h[0-9]*|^v3a*|^sv[0-9]*|^je[0-9]*|awfact*|idx*|dptb*|flpv*"
var = stringr::str_detect(string = df %>% colnames(),
pattern = pattern)
selected_var = df[!var] %>% colnames()
var_class = df[!var] %>% sapply(class) %>% unlist() %>% as.data.frame() %>% rownames_to_column(var = "variable_name")
character_variables = var_class %>% dplyr::filter(`.` == "character") %>% dplyr::select(variable_name) %>%
dplyr::pull()
df[sapply(df, is.character)] <- lapply(df[sapply(df, is.character)],
as.factor)
factor_variables = var_class %>% dplyr::filter(`.` == "factor") %>% dplyr::select(variable_name) %>%
dplyr::pull()
onehot_encoding = one_hot(as.data.table(df[factor_variables]),
naCols = TRUE,
sparsifyNAs =TRUE)
onehot_encoding
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0]
onehot_encoding_noNAs_vars
onehot_encoding_noNAs_vars
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0]
onehot_encoding_noNAs_vars
onehot_encoding_noNAs_vars[["TRUE"]]
onehot_encoding_noNAs_vars["TRUE"]
onehot_encoding_noNAs_vars
onehot_encoding_noNAs_vars %>% table()
onehot_encoding_noNAs_vars %>% table()["TRUE"]
onehot_encoding_noNAs_vars %>% as.data.frame()
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0] %>% as.data.frame()
onehot_encoding_noNAs_vars
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0] %>% as.data.frame()
colnames(onehot_encoding_noNAs_vars) = "Diff Value"
onehot_encoding_noNAs_vars
onehot_encoding_noNAs_vars %>% filter(`Diff Value` == TRUE) %>% rownames()
onehot_encoding_noNAs_diff_vars = onehot_encoding_noNAs_vars %>% filter(`Diff Value` == TRUE) %>% rownames()
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars %>% names()){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],y =  onehot_encoding_noNAs[["ciaf_1"]])
}
chisq_test
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],y =  onehot_encoding_noNAs[["ciaf_1"]])
}
onehot_encoding_noNAs_diff_vars
onehot_encoding_noNAs_diff_vars = onehot_encoding_noNAs_vars %>% filter(`Diff Value` == TRUE) %>% rownames()
onehot_encoding_noNAs_diff_vars = onehot_encoding_noNAs_vars %>% filter(`Diff Value` == TRUE) %>% rownames()
onehot_encoding_noNAs_diff_vars
onehot_encoding_noNAs_vars
df$elig
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]]) %>% try(silent = TRUE)
}
chisq_test[["child_anemia_1"]]
chisq_test[["elig_1"]]
chisq_test[["wasted_decile_50-60%"]]
chisq_test[["wasted_decile_20-30%"]]
chisq_test[["age_group_1. 6-11 mo"]]
chisq_test[["wasted_decile_40-50%"]]$p.value
chisq_test[["wasted_decile_40-50%"]]$\
chisq_test[["wasted_decile_40-50%"]]$statistic
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]]) %>% try()
}
onehot_encoding_noNAs_vars[[]]
onehot_encoding_noNAs[["elig_1"]]
onehot_encoding_noNAs[["elig_1"]]
onehot_encoding_noNAs[["elig_1"]] %>% SUM()
onehot_encoding_noNAs[["elig_1"]] %>% sum()
onehot_encoding_noNAs
onehot_encoding_noNAs %>% nrow()
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0 | colSums(onehot_encoding_noNAs != onehot_encoding_noNAs %>% nrow()) < onehot_encoding_noNAs %>% nrow()] %>% as.data.frame()
colnames(onehot_encoding_noNAs_vars) = "Diff Value"
onehot_encoding_noNAs_vars
onehot_encoding_noNAs_diff_vars = onehot_encoding_noNAs_vars %>% filter(`Diff Value` == TRUE) %>% rownames()
onehot_encoding_noNAs_diff_vars
# Remove the "elig" column if it exists
if ("elig" %in% names(df)) {
df$elig <- NULL
}
# Create a new "elig" column with 0 values
df$elig <- 0
# Replace values with 1 if bidx is 1
df$elig[df$bidx == 1] <- 1
#Convert to factor
df$elig <- as.factor(df$elig)
df$elig
df$bidx
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0 | colSums(onehot_encoding_noNAs != onehot_encoding_noNAs %>% nrow()) < (onehot_encoding_noNAs %>% nrow())] %>% as.data.frame()
colnames(onehot_encoding_noNAs_vars) = "Diff Value"
onehot_encoding_noNAs_vars
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0 | colSums(onehot_encoding_noNAs != onehot_encoding_noNAs %>% nrow()) > (onehot_encoding_noNAs %>% nrow())] %>% as.data.frame()
colnames(onehot_encoding_noNAs_vars) = "Diff Value"
onehot_encoding_noNAs_vars
colSums(onehot_encoding_noNAs != onehot_encoding_noNAs %>% nrow())
colSums(onehot_encoding_noNAs)
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0 | colSums(onehot_encoding_noNAs !=  nrow(onehot_encoding_noNAs)) <  nrow(onehot_encoding_noNAs)] %>% as.data.frame()
colnames(onehot_encoding_noNAs_vars) = "Diff Value"
onehot_encoding_noNAs_vars
colSums(onehot_encoding_noNAs !=  nrow(onehot_encoding_noNAs))
colSums(onehot_encoding_noNAs != 0)
colSums(onehot_encoding_noNAs != 1)
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0 | colSums(onehot_encoding_noNAs !=  1) > 0] %>% as.data.frame()
colnames(onehot_encoding_noNAs_vars) = "Diff Value"
onehot_encoding_noNAs_vars
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0] %>% as.data.frame()
colnames(onehot_encoding_noNAs_vars) = "Diff Value"
onehot_encoding_noNAs_vars
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0 | colSums(onehot_encoding_noNAs !=  1) > 0] %>% as.data.frame()
colnames(onehot_encoding_noNAs_vars) = "Diff Value"
onehot_encoding_noNAs_vars
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0 ] %>% as.data.frame()
colnames(onehot_encoding_noNAs_vars) = "Diff Value"
onehot_encoding_noNAs_vars
colSums(onehot_encoding_noNAs)
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0] %>% as.data.frame()
colnames(onehot_encoding_noNAs_vars) = "1st Criteria"
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0] %>% as.data.frame()
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0] %>% as.data.frame()
colnames(onehot_encoding_noNAs_vars) = "1st Criteria"
onehot_encoding_noNAs_vars
onehot_encoding_noNAs_diff_vars = onehot_encoding_noNAs_vars %>% filter(`1st Criteria` == TRUE) %>% rownames()
onehot_encoding_noNAs_diff_vars
onehot_encoding_noNAs_diff_vars = onehot_encoding_noNAs_vars %>% filter(`1st Criteria` == TRUE) %>% rownames()
onehot_encoding_noNAs_diff_vars[-c("elig_1")]
onehot_encoding_noNAs_diff_vars = onehot_encoding_noNAs_vars %>% filter(`1st Criteria` == TRUE) %>% rownames()
onehot_encoding_noNAs_diff_vars[-"elig_1"]
onehot_encoding_noNAs_vars[-c("elig_1"),]
onehot_encoding_noNAs_vars["elig_1",]
onehot_encoding_noNAs_vars
onehot_encoding_noNAs_vars %>% filter(rownames(onehot_encoding_noNAs_vars) != "elig_1")
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0] %>% as.data.frame()
onehot_encoding_noNAs_vars = onehot_encoding_noNAs_vars %>% filter(rownames(onehot_encoding_noNAs_vars) != "elig_1")
colnames(onehot_encoding_noNAs_vars) = "1st Criteria"
onehot_encoding_noNAs_vars
onehot_encoding_noNAs_diff_vars = onehot_encoding_noNAs_vars %>% filter(`1st Criteria` == TRUE) %>% rownames()
onehot_encoding_noNAs_diff_vars["elig_1"]
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]])
}
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]]) try()
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]]) %>% try()
}
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]])
}
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0] %>% as.data.frame()
onehot_encoding_noNAs_vars = onehot_encoding_noNAs_vars %>% filter(rownames(onehot_encoding_noNAs_vars) != c("elig_1", "child_alive_1"))
colnames(onehot_encoding_noNAs_vars) = "1st Criteria"
onehot_encoding_noNAs_vars
onehot_encoding_noNAs_diff_vars = onehot_encoding_noNAs_vars %>% filter(`1st Criteria` == TRUE) %>% rownames()
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]])
}
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]])
}
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0] %>% as.data.frame()
onehot_encoding_noNAs_vars = onehot_encoding_noNAs_vars %>% filter(rownames(onehot_encoding_noNAs_vars) != c("elig_1", "child_alive_1"))
colnames(onehot_encoding_noNAs_vars) = "1st Criteria"
onehot_encoding_noNAs_vars
onehot_encoding_noNAs_diff_vars = onehot_encoding_noNAs_vars %>% filter(`1st Criteria` == TRUE) %>% rownames()
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]])
}
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]]) %>% try()
}
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]])
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]])
}
knitr::opts_chunk$set(echo = TRUE)
# libraries needed
library(tidyverse)  # most variable creation here uses tidyverse
library(tidyselect) # used to select variables in FP_EVENTS.R
library(haven)      # used for Haven labeled DHSvariables
library(labelled)   # used for Haven labeled variable creation
library(expss)    # for creating tables with Haven labeled df
library(readxl)     # for exporting to excel
library(naniar)   # to use replace_with_na function
library(here)       # to get R project path
library(sjlabelled) # to set variables label
library(survey)  # to calculate weighted ratio for GAR
library(Hmisc)
library(tidyr)
library(mltools)
library(Boruta)
path <- "/Users/justi/OneDrive/Desktop/colabo_data/data/recoded.rda"
#path <- "data/DHS-2019-21/"
load(file = path)
pattern = "^v[0-9][0-9][0-9]*|^hv[0-9][0-9][0-9]*|^ml[0-9][0-9]*|^h[0-9][0-9]|^s[0-9][0-9][0-9]*|^shb[0-9][0-9][0-9]*|^h[a-z][0-9]*|^b[0-9]*|^sh[0-9]*|^m[0-9]*|^sb[0-9]*|^h[0-9]*|^v3a*|^sv[0-9]*|^je[0-9]*|awfact*|idx*|dptb*|flpv*"
var = stringr::str_detect(string = df %>% colnames(),
pattern = pattern)
selected_var = df[!var] %>% colnames()
var_class = df[!var] %>% sapply(class) %>% unlist() %>% as.data.frame() %>% rownames_to_column(var = "variable_name")
character_variables = var_class %>% dplyr::filter(`.` == "character") %>% dplyr::select(variable_name) %>%
dplyr::pull()
df[sapply(df, is.character)] <- lapply(df[sapply(df, is.character)],
as.factor)
factor_variables = var_class %>% dplyr::filter(`.` == "factor") %>% dplyr::select(variable_name) %>%
dplyr::pull()
onehot_encoding = one_hot(as.data.table(df[factor_variables]),
naCols = TRUE,
sparsifyNAs =TRUE)
onehot_encoding
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0] %>% as.data.frame()
onehot_encoding_noNAs_vars = onehot_encoding_noNAs_vars %>% filter(rownames(onehot_encoding_noNAs_vars) != c("elig_1", "child_alive_1"))
colnames(onehot_encoding_noNAs_vars) = "1st Criteria"
onehot_encoding_noNAs_vars
onehot_encoding_noNAs_diff_vars = onehot_encoding_noNAs_vars %>% filter(`1st Criteria` == TRUE) %>% rownames()
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]])
}
onehot_encoding_noNAs_diff_vars
onehot_encoding_noNAs_vars
NA_OHE_vars = onehot_encoding %>% colnames() %>% str_subset(pattern = "_NA$")
onehot_encoding_noNAs = onehot_encoding %>% dplyr::select(-c(NA_OHE_vars, "ciaf_0"))
onehot_encoding_noNAs_vars = onehot_encoding_noNAs[, colSums(onehot_encoding_noNAs != 0) > 0] %>% as.data.frame()
colnames(onehot_encoding_noNAs_vars) = "1st Criteria"
onehot_encoding_noNAs_vars
onehot_encoding_noNAs_vars %>% filter(rownames(onehot_encoding_noNAs_vars) != c("elig_1", "child_alive_1"))
onehot_encoding_noNAs_diff_vars = onehot_encoding_noNAs_vars %>% filter(`1st Criteria` == TRUE) %>% rownames()
chisq_test = vector(mode = "list")
for(feature in (onehot_encoding_noNAs_diff_vars %nin% c("elig_1", "child_alive_1"))){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]])
}
onehot_encoding_noNAs_diff_vars[ !(onehot_encoding_noNAs_diff_vars %in% c("elig_1", "child_alive_1"))]
onehot_encoding_noNAs_diff_vars = onehot_encoding_noNAs_vars %>% filter(`1st Criteria` == TRUE) %>% rownames()
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars[ !(onehot_encoding_noNAs_diff_vars %in% c("elig_1", "child_alive_1"))]){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]])
}
chisq_test = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars[ !(onehot_encoding_noNAs_diff_vars %in% c("elig_1", "child_alive_1", "christian_0"))]){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]])
}
chisq_test[["child_anemia_1"]]$statistic
chisq_test[["child_anemia_1"]]$data.name
chisq_test[["child_anemia_1"]]$parameter
chisq_test[["child_anemia_1"]]$p.value
chisq_test = vector(mode = "list")
chisq_df = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars[ !(onehot_encoding_noNAs_diff_vars %in% c("elig_1", "child_alive_1", "christian_0"))]){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]])
chisq_df[[feature]] = data.frame(test_statistic = chisq_test[[feature]]$statistic,
p_value = chisq_test[[feature]]$p.value,
row.names = feature)
}
chisq_df[["child_anemia_1"]]
chisq_df[["wasted_decile_50-60%"]]
rbind(chisq_df)
chisq_df %>% unlist()
do.call("rbind", chisq_df)
chisq_test = vector(mode = "list")
chisq_df = vector(mode = "list")
for(feature in onehot_encoding_noNAs_diff_vars[ !(onehot_encoding_noNAs_diff_vars %in% c("elig_1", "child_alive_1", "christian_0"))]){
chisq_test[[feature]] = chisq.test(x = onehot_encoding_noNAs[[feature]],
y =  onehot_encoding_noNAs[["ciaf_1"]])
chisq_df[[feature]] = data.frame(test_statistic = chisq_test[[feature]]$statistic,
p_value = chisq_test[[feature]]$p.value,
row.names = feature)
}
FeatureSelection_chisquared = do.call("rbind", chisq_df) %>% arrange(desc(test_statistic))
FeatureSelection_chisquared
FeatureSelection_chisquared[!(rownames(FeatureSelection_chisquared) %in% "ciaf_1"), ]
write.table(x = FeatureSelection_chisquared[!(rownames(FeatureSelection_chisquared) %in% "ciaf_1"), ] %>% column_to_rownames(var = "Feature"),
file = "C:/Users/justi/OneDrive/Desktop/colabo_infant_malnutrition/Feature_selection/Chi_squared_feature_selection.txt",
quote = FALSE,
sep = "\t",
row.names = FALSE,
col.names = TRUE)
write.table(x = FeatureSelection_chisquared[!(rownames(FeatureSelection_chisquared) %in% "ciaf_1"), ] %>% rownames_to_column(var = "Feature"),
file = "C:/Users/justi/OneDrive/Desktop/colabo_infant_malnutrition/Feature_selection/Chi_squared_feature_selection.txt",
quote = FALSE,
sep = "\t",
row.names = FALSE,
col.names = TRUE)
FeatureSelection_chisquared
FeatureSelection_chisquared %>% dplyr::filter(p_value < 0.05)
