df$child_alive <- as.factor(df$child_alive)
# Remove 'last_child_id' variable if it exists
if ("last_child_id" %in% colnames(df)) {
df$last_child_id <- NULL
}
# Drop the variable "last_child_id" (if it exists) and create a new variable called "last_child_id"
df <- df %>%
mutate(last_child_id = ifelse(midx == 1, real_id, NA_real_))
# Sort the df by "mother_id" and "midx"
df <- df %>%
arrange(mother_id, midx)
# Remove 'state' and 'state_ciaf_rank' variables if they exist
vars_to_remove <- c("state", "state_ciaf_rank")
df <- df[, !(colnames(df) %in% vars_to_remove)]
# Create the new 'state' variable based on the given conditions and recodings
df <- df %>%
mutate(state = factor(hv024))
# Recode state values using case_when
df <- df %>%
mutate(state_ciaf_rank = case_when(
state == 15 ~ "1. Jharkhand",
state == 8  ~ "2. Dadra and Nagar",
state == 5  ~ "3. Bihar",
state == 19 ~ "4. Madhya Pradesh",
state == 33 ~ "5. Uttar Pradesh",
state == 11 ~ "6. Gujarat",
state == 16 ~ "7. Karnataka",
state == 7  ~ "8. Chattisgarh",
state == 29 ~ "9. Rajasthan",
state == 20 ~ "10. Maharashtra",
state == 22 ~ "11. Meghalaya",
state == 12 ~ "12. Haryana",
state == 26 ~ "13. Odisha",
state == 34 ~ "14. Uttarakhand",
state == 4  ~ "15. Assam",
state == 35 ~ "16. West Bengal",
state == 2  ~ "17. Andhra Pradesh",
state == 27 ~ "18. Puducherry",
state == 25 ~ "19. Delhi",
state == 31 ~ "20. Tamil Nadu",
state == 9  ~ "21. Daman and Diu",
state == 3  ~ "22. Arunachal Pradesh",
state == 30 ~ "23. Sikkim",
state == 36 ~ "24. Telangana",
state == 1  ~ "25. Andaman and Nicobar",
state == 10 ~ "26. Goa",
state == 28 ~ "27. Punjab",
state == 13 ~ "28. Himachal Pradesh",
state == 32 ~ "29. Tripura",
state == 18 ~ "30. Lakshwadeep",
state == 14 ~ "31. Jammu and Kashmir",
state == 6  ~ "32. Chandigarh",
state == 17 ~ "33. Kerala",
state == 24 ~ "34. Nagaland",
state == 21 ~ "35. Manipur",
state == 23 ~ "36. Mizoram"
))
# First, drop the variable if it already exists
if ("sibling_under5" %in% names(df)) {
df$sibling_under5 <- NULL
}
# Now, recode v208 into sibling_under5
df$sibling_under5 <- ifelse(df$v208 == 1, 0,
ifelse(df$v208 == 2, 1,
ifelse(df$v208 == 3, 2,
ifelse(df$v208 >= 4 & df$v208 <= 6, 3, NA))))
# Label the categories
levels(df$sibling_under5) <- c("0. none", "1. one", "2. two", "3. 3 or more")
# Remove 'pre_birth_interval' variable if it exists
vars_to_remove <- c("pre_birth_interval")
df <- df[, !(colnames(df) %in% vars_to_remove)]
# Recode 'b11' values and create 'pre_birth_interval' column
df <- df %>%
mutate(pre_birth_interval = case_when(
(b11 >= 0 & b11 <= 23) ~ "2. < 24 months",
(b11 >= 24 & b11 <= 400) ~ "1. 24+ or first child"
))
# Replace 'pre_birth_interval' with "1. 24+ or first child" if 'siblings' is 0
df <- df %>%
mutate(pre_birth_interval = ifelse(siblings == 0, "1. 24+ or first child", pre_birth_interval))
# Recode 'b12' values and create 'succeeding_birth_interval' column
df <- df %>%
mutate(succeeding_birth_interval = case_when(
(b12 >= 0 & b12 <= 23) ~ "1. < 24 months",
(b12 >= 24 & b12 <= 400) ~ "0. 24+"
))
# Remove 'pre_birth_interval_less_than_equal_to_24_months' variable if it exists
if ("pre_birth_interval_less_than_equal_to_24_months" %in% colnames(df)) {
df$pre_birth_interval_less_than_equal_to_24_months <- NULL
}
df <- df %>%
mutate(pre_birth_interval_less_than_equal_to_24_months = ifelse(df$pre_birth_interval == "2. < 24 months", 1, 0)  %>% as.factor())
df$brothers_count <- df$v202
# Subtract 1 from 'brothers_count' if 'female' is 0 and 'brothers_count' is not 0
df$brothers_count <- ifelse(df$female == 0 & df$brothers_count != 0, df$brothers_count - 1, df$brothers_count)
# Drop 'brothers_home' column and create 'brothers_home' with the recoded values of 'brothers_count'
df$brothers_home <- case_when(
df$brothers_count == 2 ~ "2. 2",
df$brothers_count >= 3 & df$brothers_count <= 10 ~ "3. 3 or more",
TRUE ~ NA_character_
)
# Drop 'sisters' and 'sisters_count' columns and create 'sisters_count' with 'v203' values
df$sisters_count <- df$v203
# Subtract 1 from 'sisters_count' if 'female' is 1 and 'sisters_count' is not 0
df$sisters_count <- ifelse(df$female == 1 & df$sisters_count != 0, df$sisters_count - 1, df$sisters_count)
# Drop 'sisters_home' column and create 'sisters_home' with the recoded values of 'sisters_count'
df$sisters_home <- case_when(
df$sisters_count == 2 ~ "2. 2",
df$sisters_count >= 3 & df$sisters_count <= 10 ~ "3. 3 or more",
TRUE ~ NA_character_
)
# sh58 variable (Household has a BPL card) is present in the 2015-16 survey but not in the 2019-21
# Drop 'bpl_card' column and create 'bpl_card' with the recoded values of 'sh58'
#df$bpl_card <- case_when(
#  df$sh58 == 0 ~ "0. no",
#  df$sh58 == 1 ~ "1. yes",
#  is.na(df$sh58) ~ NA_character_,
#  TRUE ~ NA_character_
#)
# Drop 'preg_deworm' column and create 'preg_deworm' with the recoded values of 'm60'
df$preg_deworm <- case_when(
df$m60 == 0 ~ "0.no",
df$m60 == 1 ~ "1.yes",
df$m60 >= 7 & df$m60 <= 9 ~ NA_character_,
TRUE ~ NA_character_
)
# Recode 'm45' variable and create 'preg_ironyn' variable
df <- df %>%
mutate(preg_ironyn = case_when(
m45 == 0 ~ "0.no",
m45 == 1 ~ "1.yes",
m45 >= 7 & m45 <= 9 ~ NA_character_,
TRUE ~ NA_character_
))
# Recode 'm46' variable and create 'preg_iron' variable
df <- df %>%
mutate(preg_iron = case_when(
m46 >= 1 & m46 <= 30 ~ "1. 1 mo or less",
m46 >= 31 & m46 <= 90 ~ "2. 1-3 mo",
m46 >= 91 & m46 <= 180 ~ "3. 3-6 mo",
m46 >= 180 & m46 <= 300 ~ "4. 6+ mo",
m46 >= 997 & m46 <= 999 ~ NA_character_,
TRUE ~ NA_character_
))
# Replace values in 'preg_iron' with 0 where 'preg_ironyn' is 0
df$preg_iron <- ifelse(df$preg_ironyn == "0.no", 0, df$preg_iron)
# Recode 'm15' variable and create 'delivery_place' variable
df <- df %>%
mutate(delivery_place = case_when(
m15 >= 11 & m15 <= 13 ~ "1. at home",
m15 >= 21 & m15 <= 33 ~ "2. at HC facility",
m15 == 96 ~ NA_character_,
TRUE ~ NA_character_
))
# Recode 'h43' variable and create 'child_deworm' variable
df <- df %>%
mutate(child_deworm = case_when(
h43 == 0 ~ "0.no",
h43 == 1 ~ "1.yes",
h43 >= 7 & h43 <= 9 ~ NA_character_,
TRUE ~ NA_character_
))
df <- df  %>%
mutate(child_cough = case_when(h31 == 0 ~ 0,
h31 == 2 ~ 1,
TRUE ~ NA_real_))
df$child_cough <- as.factor(df$child_cough)
# Drop variables starting with 'child_fever'
if ("child_fever" %in% names(df)) {
df <- df %>% select(-starts_with("child_fever"))
}
# Recode 'h22' variable into 'child_fever' variable
df <- df %>% mutate(child_fever = case_when(
h22 == 0 ~ "0.no",
h22 == 1 ~ "1.yes",
h22 == 8 ~ NA_character_, # missing
TRUE ~ NA_character_ # all other cases
))
# Drop variables starting with 'child_diarrhea'
if ("child_diarrhea" %in% names(df)) {
df <- df %>% select(-starts_with("child_diarrhea"))
}
# Recode 'h11' variable into 'child_diarrhea' variable
df <- df %>% mutate(child_diarrhea = case_when(
h11 == 0 ~ "0.no",
h11 == 2 ~ "1.yes",
h11 == 8 ~ NA_character_, # missing
TRUE ~ NA_character_ # all other cases
))
# Drop variables starting with 'birthweight'
if ("birthweight" %in% names(df)) {
df <- df %>% select(-starts_with("birthweight"))
}
# Recode 'm19' variable into 'birthweight' variable
df <- df %>% mutate(birthweight = case_when(
m19 >= 500 & m19 <= 1800 ~ "1. 1800g or less",
m19 >= 1801 & m19 <= 2500 ~ "2. 1801 to 2500g",
m19 >= 2501 & m19 <= 9000 ~ "3. more than 2500g",
m19 == 9990 ~ NA_character_, # missing
TRUE ~ NA_character_ # all other cases
))
# Drop variables starting with 'birth_weight_less_than_1800_g', `birth_weight_1800_g_2500_g`
if ("birth_weight_less_than_1800_g" %in% names(df)) {
df <- df %>% select(-starts_with("birth_weight_less_than_1800_g"))
}
if ("birth_weight_1800_g_2500_g" %in% names(df)) {
df <- df %>% select(-starts_with("birth_weight_1800_g_2500_g"))
}
df <- df %>%
mutate(birth_weight_less_than_1800_g = ifelse(df$birthweight == "1. 1800g or less", 1, 0)  %>% as.factor(),
birth_weight_1800_g_2500_g = ifelse(df$birthweight == "2. 1801 to 2500g", 1, 0) %>% as.factor())
# Drop variables starting with 'multiplet'
if ("multiplet" %in% names(df)) {
df <- df %>% select(-starts_with("multiplet"))
}
# Recode 'b0' variable into 'multiplet' variable
df <- df %>% mutate(multiplet = case_when(
b0 == 10 ~ "0. no",
b0 %in% 1:3 ~ "1. yes",
TRUE ~ NA_character_ # all other cases
))
# Variables sh35/sh36 in 2015-16 survey (caste or tribe of household head, Type of caste or tribe of the household head) were replaced by SH48 and SH49 in 2019-21
# Drop variables starting with 'caste'
if ("caste" %in% names(df)) {
df <- df %>% select(-starts_with("caste"))
}
# Recode 'sh49' variable into 'caste' variable
df <- df %>% mutate(caste = fct_case_when(
sh49 == 1 ~ "4. Scheduled Caste",
sh49 == 2 ~ "3. Scheduled Tribe",
sh49 == 3 ~ "2. Other backward caste",
sh49 == 4 ~ "1. None",
sh49 == 8 ~ NA_character_, # missing
TRUE ~ NA_character_ # all other cases
))
# Replace 'caste' value with 1 if 'sh48' equals 993 or 998
df <- df %>% mutate(caste = if_else(sh48 %in% c(993, 998), "1. None", caste))
# Drop variables starting with 'religion'
if ("religion" %in% names(df)) {
df <- df %>% select(-starts_with("religion"))
}
# Recode 'v130' variable into 'religion' variable
df <- df %>% mutate(religion = case_when(
v130 %in% c(1, 4:8) ~ "1. Hindu+",
v130 == 2 ~ "2. Muslim",
v130 == 3 ~ "3. Christian",
v130 >= 9 & v130 <= 96 ~ "4. Other",
TRUE ~ NA_character_ # all other cases
))
# Drop variables starting with 'rural'
if ("rural" %in% names(df)) {
df <- df %>% select(-starts_with("rural"))
}
# Recode 'v025' variable into 'rural' variable
df <- df %>% mutate(rural = case_when(
v025 == 1 ~ "0. urban",
v025 == 2 ~ "1. rural",
TRUE ~ NA_character_ # all other cases
))
# Drop variables starting with 'mother_education'
if ("mother_education" %in% names(df)) {
df <- df %>% select(-starts_with("mother_education"))
}
# Create 'mother_education' column based on 'v133' values
df$mother_education <- ifelse(df$v133 == 0, 0,
ifelse(df$v133 >= 1 & df$v133 <= 7, 1,
ifelse(df$v133 >= 8 & df$v133 <= 10, 2,
ifelse(df$v133 >= 11 & df$v133 <= 12, 3,
ifelse(df$v133 >= 13 & df$v133 <= 22, 4, NA
)))))
# Drop variables starting with 'maternal_edu_no' 'maternal_edu_1_7' 'maternal_edu_greater_7_10'
if ("maternal_edu_no" %in% names(df)) {
df <- df %>% select(-starts_with("maternal_edu_no"))
}
if ("maternal_edu_1_7" %in% names(df)) {
df <- df %>% select(-starts_with("maternal_edu_1_7"))
}
if ("maternal_edu_greater_7_10" %in% names(df)) {
df <- df %>% select(-starts_with("maternal_edu_greater_7_10"))
}
df <- df %>%
mutate(maternal_edu_no = ifelse(df$v133 == 0, 1, 0) %>% as.factor(),
maternal_edu_1_7 = ifelse(df$v133 >= 1 & df$v133 <= 7,
1, 0) %>% as.factor(),
maternal_edu_greater_7_10 = ifelse(df$v133 >= 7 & df$v133 <= 10,
1, 0) %>% as.factor())
# Drop variables starting with 'season'
if ("season" %in% names(df)) {
df <- df %>% select(-starts_with("season"))
}
# Recode 'v006' variable into 'season' variable
df <- df %>% mutate(season = case_when(
v006 %in% c(1, 2, 3, 12) ~ "1. Winter",
v006 %in% 4:6 ~ "2. Summer",
v006 %in% 7:9 ~ "3. Monsoon",
v006 %in% 10:11 ~ "4. Post-Monsoon",
TRUE ~ NA_character_ # all other cases
))
## Variable s564 (While breastfeeding, received benefits from ang) in 2015-16 appears to be renamed to S567 (When you were breastfeeding child did you recei) in 2019-21
# Rename variable 's567' to 'anganwadi_support'
df <- df %>% rename(anganwadi_support = s567)
# Drop variables starting with 'anc_visits'
if ("anc_visits" %in% names(df)) {
df <- df %>% select(-starts_with("anc_visits"))
}
# Recode 'm14' variable into 'anc_visits' variable
df <- df %>% mutate(anc_visits = case_when(
m14 == 0 ~ "0. no visits",
m14 >= 1 & m14 <= 3 ~ "1. 1-3 visits",
m14 >= 4 & m14 <= 30 ~ "2. 4 or more visits",
m14 == 98 ~ NA_character_, # missing
TRUE ~ NA_character_ # all other cases
))
# Unknown variable: Ionized Salt
# Create a new variable 'covariate_nonmissing' and initialize it to 0
df$covariate_nonmissing <- 0
# Use 'ifelse()' to set 'covariate_nonmissing' to 1 where all specified variables are non-missing
df$covariate_nonmissing <- ifelse(
!is.na(df$wealth_quintile) & !is.na(df$mother_education) &
!is.na(df$maternal_height) & !is.na(df$maternal_bmi) &
!is.na(df$marital_age) & !is.na(df$dietary_diversity) &
!is.na(df$bf_start) & !is.na(df$infectious_disease) &
!is.na(df$water_source) & !is.na(df$toilet_type) &
!is.na(df$air_quality) &
#!is.na(df$iodized_salt) & # Ionized salt variable not found
!is.na(df$full_vaccination) & !is.na(df$vitamin_a),
1, df$covariate_nonmissing
)
df$covariate_nonmissing <- df$covariate_nonmissing %>% as.factor()
df <- df %>%
select(-starts_with("fem_aut")) %>%
mutate(fem_aut_hc = case_when(v743a == 1 ~ 1, v743a == 2 ~ 0.5, between(v743a, 4, 6) ~ 0),
fem_aut_large = case_when(v743b == 1 ~ 1, v743b == 2 ~ 0.5, between(v743b, 4, 6) ~ 0),
fem_aut_daily = case_when(v743d == 1 ~ 1, v743d == 2 ~ 0.5, between(v743d, 4, 6) ~ 0),
fem_aut_visits = case_when(v743f == 1 ~ 1, v743f == 2 ~ 0.5, between(v743f, 4, 6) ~ 0)) %>%
group_by(hhid) %>%
mutate(fem_aut_hc = fem_aut_hc[1],
fem_aut_large = fem_aut_large[1],
fem_aut_daily = fem_aut_daily[1],
fem_aut_visits = fem_aut_visits[1]) %>%
ungroup() %>%
select(-starts_with("v743"))
# Remove the "state_zones" column if it exists
if ("state_zones" %in% names(df)) {
df$state_zones <- NULL
}
# Create a new "state_zones" column by recoding the "v024" column
df$state_zones <- case_when(
df$v024 %in% c(14, 28, 13, 6, 29, 25, 12) ~ 2, # North
df$v024 %in% c(4, 3, 21, 22, 23, 24, 32, 30) ~ 1, # North-Eastern
df$v024 %in% c(7, 19, 34, 33) ~ 3, # Central
df$v024 %in% c(5, 15, 26, 35) ~ 4, # Eastern
df$v024 %in% c(8, 9, 10, 11, 20) ~ 5, # Western
df$v024 %in% c(2, 16, 17, 18, 27, 31, 36, 1) ~ 6 # Southern
)
# Label the categories of the "state_zones" column
label_values <- c("1. North-Eastern", "2. North", "3. Central", "4. Eastern", "5. Western", "6. Southern")
names(label_values) <- 1:6
df$state_zones <- factor(df$state_zones, levels = 1:6, labels = label_values)
# Remove the "eag_state" column if it exists
if ("eag_state" %in% names(df)) {
df$eag_state <- NULL
}
# Create a new "eag_state" column by recoding the "state" column
df$eag_state <- ifelse(
df$state %in% c(4, 5, 6, 15, 19, 26, 29, 33, 34),
1,
0
)
# Drop priority_state if it exists
if ("priority_state" %in% names(df)) {
df$priority_state <- NULL
}
# Generate priority_state variable
df$priority_state <- 1
df$priority_state[df$state %in% c(5, 7, 13, 14, 15, 19, 26, 29, 33, 34)] <- 0
df$priority_state[df$state %in% c(3, 4, 21, 22, 23, 24, 30, 32)] <- 2
df$priority_state[df$state %in% c(1, 6, 8, 9, 18, 25, 27)] <- 3
# Recode priority_state
df$priority_state_bin <- case_when(
df$priority_state %in% c(0, 2) ~ 1,
df$priority_state %in% c(1, 3) ~ 0
)
df$focus_states <- case_when(
df$priority_state == 0 ~ "0. Normal Focus",
df$priority_state == 1 ~ "1. NE Focus",
df$priority_state %in% c(2, 3) ~ "2. Other focus"
)
df$Northeast_focus <- ifelse(df$focus_states == "1. NE Focus", 1, 0)  %>% as.factor()
df$Other_Focus <- ifelse(df$focus_states == "2. Other focus", 1, 0)  %>% as.factor()
# remove water_home if it exists
if ("water_home" %in% names(df)) {
df <- df %>% select(-water_home)
}
# create water_home variable
df <- df %>%
mutate(water_home = case_when(
hv204 == 0 | hv204 == 996 ~ 1,
hv204 > 0 & hv204 < 990 ~ 0,
TRUE ~ NA_real_
))
# label values
df$water_home <- factor(df$water_home, levels = c(0, 1), labels = c("0.no", "1.yes"))
# remove floor_finish if it exists
if ("floor_finish" %in% names(df)) {
df <- df %>% select(-floor_finish)
}
df$floor_finish <- case_when(
df$hv213 >= 31 ~ 1,
df$hv213 < 31 ~ 0,
TRUE ~ NA_real_
)
levels(df$floor_finish) <- c("0.no", "1.yes")
# remove floor_finish if it exists
if ("wall_finish" %in% names(df)) {
df <- df %>% select(-wall_finish)
}
df <- df %>%
mutate(wall_finish = case_when(
hv214 >= 31 ~ 1,
hv214 < 31 ~ 0,
TRUE ~ NA_real_)) %>%
mutate(wall_finish = factor(wall_finish, levels = c(0, 1), labels = c("0.no", "1.yes")))
# remove roof_finish if it exists
if ("roof_finish" %in% names(df)) {
df <- df %>% select(-roof_finish)
}
df <- df %>%
mutate(roof_finish = case_when(
hv215 == 31 ~ 1,
TRUE ~ 0
)) %>%
mutate(roof_finish = factor(roof_finish, levels = c(0, 1), labels = c("0.no", "1.yes")))
# remove house_finish if it exists
if ("house_finish" %in% names(df)) {
df <- df %>% select(-house_finish)
}
df <- df %>%
mutate(house_finish = case_when(
wall_finish == 1 | roof_finish == 1 | floor_finish == 1 ~ 1,
wall_finish == 1 & roof_finish == 1 & floor_finish == 1 ~ 2,
TRUE ~ 0),
house_finish_bin = case_when(
house_finish == 2 ~ 1,
TRUE ~ house_finish)
)
# # remove use_finish if it exists
if ("use_soap" %in% names(df)) {
df <- df %>% select(-use_soap)
}
df$hv232 <- as.numeric(df$hv232)
df$use_soap <- NA
df$use_soap <- case_when(
df$hv230a < 3 & !is.na(df$hv232)  ~ 0,
is.na(df$hv230a) & df$hv232 == 1  ~ 1,
TRUE ~ NA_real_
)
df$use_soap <- case_when(is.na(df$use_soap)  ~ 1,
TRUE ~ 0) %>% as.factor()
# remove cooking_fuel if it exists
if ("cooking_fuel" %in% names(df)) {
df <- df %>% select(-cooking_fuel)
}
df$cooking_fuel <- case_when(
df$fuel_type == "1. electricity/gas/kerosene" ~ 1,
df$fuel_type == "2. wood/coal" | df$fuel_type == "3. straw/hay/dung" ~ 0,
TRUE ~ NA_real_
)
levels(df$cooking_fuel) <- c("0. solid fuel", "1. non-solid fuel")
# remove reading if it exists
#if ("reading" %in% names(df)) {
#  df <- df %>% select(-reading)
#}
#df <- df %>%
#  mutate(
#    reading = case_when(
#      v155 == 2 ~ 1,
#      v155 > 2 ~ NA_real_,
#      TRUE ~ v155
#    )
#  )
# remove christian if it exists
if ("christian" %in% names(df)) {
df <- df %>% select(-"christian")
}
df$christian <- ifelse(df$religion == 3, 1, 0)
df$christian <- as.factor(df$christian)
# Drop variables starting with 'caste'
if ("low_caste" %in% names(df)) {
df <- df %>% select(-starts_with("low_caste"))
}
# Replace values based on conditions
df <- df %>% dplyr::mutate(low_caste = ifelse(caste == "1. None", 0,1) %>% as.factor())
df$low_caste <- df$low_caste %>% as.factor()
# df <- df %>% dplyr::mutate(caste = case_when(df$caste == `1. None` ~ 4,
#                                        `2. Other backward caste` ~ 3,
#                                        `3. Scheduled Tribe` ~ 2,
#                                        `4. Scheduled Caste` 1))
# Remove 'toilet' column if it exists
if ("toilet" %in% colnames(df)) {
df$toilet <- NULL
}
# Create 'toilet' column
df$toilet <- NA
# Replace 'toilet' values based on 'toilet_type'
df$toilet[df$toilet_type == "0. no toilet" ] <- 0
df$toilet[df$toilet_type == "1. flush toilet" | df$toilet_type ==  "2. pit or dry toilet"] <- 1
df$toilet <- as.factor(df$toilet)
# Create 'm_height' variable and round 'maternal_height_cm' to 1 decimal place
df <- df %>% mutate(m_height = round(maternal_height_cm, 1))
# Create 'm_ht152' variable
df <- df %>% mutate(m_ht152 = if_else(m_height >= 152 & !is.na(m_height), 1, 0)) %>% as.factor()
